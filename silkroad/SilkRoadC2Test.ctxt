#BlueJ class context
comment0.target=SilkRoadC2Test
comment0.text=\r\n\ Clase\ de\ pruebas\ unitarias\ para\ la\ clase\ SilkRoad.\r\n\ Estas\ pruebas\ cubren\ los\ requisitos\ de\ la\ simulaci\u00F3n\ SilkRoad.\r\n\ \r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=void\ setUp()
comment2.params=
comment2.target=void\ accordingDAShouldAddStoreCorrectly()
comment2.text=\r\n\ Test\ para\ verificar\ que\ al\ colocar\ una\ tienda,\ esta\ se\ agrega\ correctamente.\r\n
comment3.params=
comment3.target=void\ accordingDAShouldRemoveStoreCorrectly()
comment3.text=\r\n\ Test\ para\ verificar\ que\ al\ eliminar\ una\ tienda,\ esta\ se\ elimina\ correctamente.\r\n
comment4.params=
comment4.target=void\ accordingDBShouldMoveRobotCorrectly()
comment4.text=\r\n\ Test\ para\ verificar\ que\ un\ robot\ se\ mueve\ correctamente\ a\ una\ nueva\ posici\u00F3n.\r\n
comment5.params=
comment5.target=void\ accordingDBShouldMoveRobotOptimally()
comment5.text=\r\n\ Test\ para\ verificar\ que\ un\ robot\ se\ mueve\ de\ manera\ optimizada\ maximizando\ las\ ganancias.\r\n
comment6.params=
comment6.target=void\ accordingDAShouldCalculateOptimalPath()
comment6.text=\r\n\ Test\ para\ verificar\ que\ al\ consultar\ la\ ruta\ \u00F3ptima,\ se\ genera\ correctamente.\r\n
comment7.params=
comment7.target=void\ accordingDBShouldTrackRobotEarnings()
comment7.text=\r\n\ Test\ para\ verificar\ que\ se\ calculan\ correctamente\ las\ ganancias\ de\ un\ robot.\r\n
comment8.params=
comment8.target=void\ accordingDAShouldReturnBestRobot()
comment8.text=\r\n\ Test\ para\ verificar\ que\ el\ m\u00E9todo\ `getBestRobot`\ devuelve\ el\ robot\ con\ las\ mayores\ ganancias.\r\n
numComments=9
